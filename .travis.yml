sudo: required
dist: xenial
language: python
matrix:
  include:
  - os: linux
    env:
    - PYTHON_VERSION=3.6
    - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
    python: 3.6
  - os: linux
    env:
    - PYTHON_VERSION=3.7
    - MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
    python: 3.7
before_install:
- openssl aes-256-cbc -K $encrypted_a0a62c26415d_key -iv $encrypted_a0a62c26415d_iv
  -in pliers/tests/credentials/google.json.enc -out pliers/tests/credentials/google.json -d || true
- sudo apt-get install libavformat-dev libavfilter-dev libavdevice-dev ffmpeg libmp3lame-dev tesseract-ocr graphviz cmake
- export MINICONDA=$HOME/miniconda
- export PATH="$MINICONDA/bin:$PATH"
- if test -e $MINICONDA/bin ; then
    echo "miniconda already installed.";
  else
      echo "Installing miniconda.";
      rm -rf $HOME/miniconda;
      if [[ -d $HOME/miniconda.sh ]]; then rm -rf $HOME/miniconda.sh; fi;
      wget $MINICONDA_URL -O miniconda.sh;
      bash miniconda.sh -b -f -p $MINICONDA;
  fi
- hash -r
- conda info -a
- conda config --set always_yes yes --set changeps1 no
- conda config --add channels conda-forge
- conda update -y conda
- rm -rf /home/travis/miniconda/envs/test-env
- conda create -q -n test-env python=$PYTHON_VERSION
- source activate test-env
install:
- sudo apt-get install libboost-python-dev
- pip install --upgrade --ignore-installed setuptools
- pip install -r requirements.txt --upgrade
- pip install -r optional-dependencies.txt --upgrade
- pip install --upgrade coveralls pytest-cov

before_script:
- python -m pliers.support.download
- python -m spacy download en_core_web_sm
script:
- py.test pliers/tests/test_* --cov-report term-missing --cov=pliers -m "not requires_payment"
- py.test pliers/tests/extractors --cov-report term-missing --cov=pliers -m "not requires_payment" --cov-append
- py.test pliers/tests/converters --cov-report term-missing --cov=pliers -m "not requires_payment" --cov-append
- py.test pliers/tests/filters --cov-report term-missing --cov=pliers -m "not requires_payment" --cov-append
after_success:
- coveralls
before_cache:
- conda clean --tarballs --packages --index-cache
cache:
  pip: true
  directories:
  - "$HOME/miniconda"
